const ru = {
  dashboard: {
    timeline: {
      alerts: {
        etaChanged: 'ETA to stops {{stopsIds}} of trip {{tripId}} has been updated - Driver has been notified by the system.',
      },
    },
  },
  drivers: {
    createNew: 'Создать +',
    name: 'Имя',
    status: 'Статус',
    email: 'Электронная почта',
    vehicle: 'Машина',
    phoneNumber: 'Телефонный номер',
    activeSince: 'Активный с',
    address: 'Адрес',
    sum: 'Сумма',
    pax: 'Количество мест',
    earned: 'Earned',
    driver: 'Driver',
    activate: 'Активный',
    deactivate: 'Деактивировать',
    break: 'Перерыв',
    endBreak: 'Конец перерыва',
    selectDriver: 'Пожалуйста выберите водителя',
    selectVehicle: 'Пожалуйста выберите машину',
    actions: 'Действия',
    edit: {
      toastResetSuccess: 'Ссылка для смены пароля отправлена на емаил.',
      toastError: 'Что то пошло не так!',
      informationTab: 'Информация',
      notesTab: 'Заметки',
      historyTab: 'История',
      popupTitleActive: 'Причина деактивизации',
      popupTitleDeactivation: 'Деактивизировать Водителя',
      popupSubTitleDeactivation: 'Выберите причину деактивизации',
      popupActionActive: 'Активизировать',
      popupActionDeactivate: 'Деактивизировать',
      actionActive: 'Активирован',
      actionDeactivate: 'Деактивирован',
    },
  },
  createDriver: {
    buttonConfirm: 'Confirm',
    buttonCancel: 'Cancel',
  },
  resetPassword: {
    resetPasswordTitle: 'Reset password',
    resetPasswordHint: 'Please enter a new password.',
    resetSuccessful: 'Reset password successfuly',
    resetHint: 'Please back to login and sign in again',
    passProtect0: 'Password is required',
    passProtect1: 'Password is to short',
    passProtect2: 'Passwords not match',
    passProtect3: 'Password should contain at least one uppercase letter, one special character and number',
    passProtect4: 'Please confirm new password',
    newPassword: 'New Password',
    reEnterPassword: 'Confirm new Password',
  },
  forgotPassword: {
    forgotYourPassword: 'Forgot Your Password?',
    backToLogin: 'Back to login',
    sendPassword: 'Send password',
    emailHint: 'The email address you recevied from your admin',
    noWorries: 'No worries! Please enter your email and we will send you a link to reset your password',
    PleaseEnterEmailAddress: 'Please enter your email address',
    thankYou: 'Thank You!',
    forgotPassword: 'Forgot Password',
    successHint: 'If the email you have entered exists in our system, we will send a link to reset your password in a few seconds',
    emailAddress: 'Email Address',
    redirect: 'You will be redirected in ',
    seconds: ' seconds',
    emailRequires: 'Email is required',
    invalidEmail: 'Email is invalid',
  },
  settings: {
    parameters: {
      createParameter: 'Create Parameter',
      editParameter: 'Edit Parameter',
      parameters: 'Parameters',
      selectParameterMessage: 'Select a parameter',
      addNewParameter: 'Add new parameter',
      name: 'Name',
      category: 'Category',
      unit: 'Profile',
      type: 'Type',
      actions: 'Actions',
      form: {
        name: 'Name',
        selectName: 'Select name',
        profile: 'Profile',
        selectProfile: 'Select profile',
        category: 'Category',
        selectCategory: 'Select category',
        type: 'Type',
        selectType: 'Select type',
        value: 'Value',
        enterValue: 'Enter the value',
        showAdvanced: 'Show advanced',
        hideAdvanced: 'Hide advanced',
      },
    },
  },
  shuttles: {
    code: 'Code',
    name: 'Name',
    direction: 'Direction',
    pax: 'Pax',
    editShuttle: 'Edit Shuttle',
    createShuttle: 'Create Shuttle',
    enterPax: 'Enter Pax',
    selectDirection: 'Select Direction',
    enterName: 'Enter Name',
    enterCode: 'Enter Code',
    enterLat: 'Enter Latitude',
    enterLon: 'Enter Longitude',
    selectWeekDays: 'Select Week Days',
    enterHour: 'Enter Hour',
    enterLimit: 'Enter Limit',
    times: 'Times',
    hour: 'Hour',
    weekDays: 'Week Days',
    limit: 'Limit',
    stops: 'Stops',
    latitude: 'Latitude',
    longitude: 'Longitude',
    codeRequired: 'Code is required',
    nameRequired: 'Name is required',
    directionRequired: 'Direction is required',
    paxRequired: 'Pax is required',
    hourRequired: 'Hour is required',
    weekDaysRequired: 'At least one day must be selected',
    limitRequired: 'Limit is required',
    latRequired: 'Latitude is required',
    lonRequired: 'Longitude it required',
    from: 'From',
    to: 'To',
    addStop: 'Add Stop',
    addTime: 'Add Time',
    duplicate: 'Duplicate',
  },
  common: {
    add: 'Add',
    save: 'Save',
    edit: 'Edit',
    delete: 'Delete',
    new: 'New',
    action: 'Action',
    cancel: 'Cancel',
    close: 'Close',
  },
  weekDays: {
    sunday: 'Sunday',
    monday: 'Monday',
    tuesday: 'Tuesday',
    wednesday: 'Wednesday',
    thursday: 'Thursday',
    friday: 'Friday',
    saturday: 'Saturday',
  },
  vehicles: {
    blocks: {
      details: 'General Information',
      capacity: 'Capacity',
      services: 'Services',
      insurance: 'Insurance',
      mileageInspection: 'Mileage & Inspection',
    },
    create: {
      name: 'Name',
      year: 'Year',
      make: 'Make',
      model: 'Model',
      color: 'Color',
      licenseExpDate: 'License Plate',
      service: 'Service',
      pax: 'Max Passengers',
      mileage: 'Mileage',
      mileageLastInspection: 'Mileage in last inspection',
      lastInspectionDate: 'Last inspection Date',
      nextInspectionDate: 'Next inspection date',
      typeOfInsurance1: 'Type of insurance 1',
      typeOfInsurance1_start: 'Start date',
      typeOfInsurance1_end: 'End date',
      typeOfInsurance2: 'Type of insurance 2',
      typeOfInsurance2_start: 'Start date',
      typeOfInsurance2_end: 'End date',
      valdations: {
        name: 'Name is required',
        plateNumber: {
          matches: 'Max Passengers must be a number',
          required: 'Max Passengers is Required',
        },
        service: 'Service With is required',
        pax: {
          matches: 'Pax must be a number',
          required: 'Pax is Required',
        },
        model: 'Model With is required',
        color: 'Color With is required',
        year: {
          matches: 'Year must be a number',
          required: 'Year is Required',
        },
        licenseExpDate: 'License Expiration is required',
      },
    },
    edit: {
      name: 'Name',
      year: 'Year',
      make: 'Make',
      model: 'Model',
      color: 'Color',
      licenseExpDate: 'License Plate',
      service: 'Service',
      pax: 'Max Passengers',
      mileage: 'Mileage',
      mileageLastInspection: 'Mileage in last inspection',
      lastInspectionDate: 'Last inspection Date',
      nextInspectionDate: 'Next inspection date',
      typeOfInsurance1: 'Type of insurance 1',
      typeOfInsurance1_start: 'Start date',
      typeOfInsurance1_end: 'End date',
      typeOfInsurance2: 'Type of insurance 2',
      typeOfInsurance2_start: 'Start date',
      typeOfInsurance2_end: 'End date',
      toastResetSuccess: 'Password reset sent to email.',
      toastError: 'Something was wrong!',
      informationTab: 'Information',
      notesTab: 'Notes',
      historyTab: 'History',
      popupTitleActive: 'Suspend Vehicle',
      popupTitleDeactivation: 'Suspend Reason',
      popupSubTitleDeactivation: 'Select suspend reason',
      popupActionActive: 'Suspend',
      popupActionDeactivate: 'Unsuspend',
      actionActive: 'Suspend',
      actionDeactivate: 'Unsuspend',
      valdations: {
        name: 'Name is required',
        make: 'Make is required',
        plateNumber: {
          matches: 'Max Passengers must be a number',
          required: 'Max Passengers is Required',
        },
        service: 'Service With is required',
        pax: {
          matches: 'Pax must be a number',
          required: 'Pax is Required',
        },
        model: 'Model With is required',
        color: 'Color With is required',
        year: {
          matches: 'Year must be a number',
          required: 'Year is Required',
        },
        licenseExpDate: 'License Expiration is required',
      },
    },
    createNew: 'New +',
    id: 'Id',
    name: 'Name',
    make: 'Make',
    model: 'Model',
    year: 'Year',
    color: 'Color',
    pax: 'Max Passengers',
    supplier: 'Supplier',
    licenseExpDate: 'License Expiration',
  },
  users: {
    blocks: {
      details: 'Details',
      roles: 'Role',
    },
    create: {
      firstName: 'First Name',
      lastName: 'Last Name',
      phone: 'Phone',
      email: 'Email',
      role: 'Role',
      valdations: {
        firstName: 'First Name is required',
        lastName: 'Last Name is required',
        phone: 'Phone is required',
        email: {
          required: 'Email is required',
          email: 'Invalid email address',
        },
      },
    },
    edit: {
      firstName: 'First Name',
      lastName: 'Last Name',
      phone: 'Phone',
      email: 'Email',
      pass: 'Password',
      role: 'Role',
      toastResetSuccess: 'Password reset sent to email.',
      toastError: 'Something was wrong!',
      informationTab: 'Information',
      notesTab: 'Notes',
      historyTab: 'History',
      popupTitleActive: 'Deactivate Reason',
      popupTitleDeactivation: 'Deactivate User',
      popupSubTitleDeactivation: 'Select deactivation reason',
      popupactionActive: 'Activate',
      popupactionDeactivate: 'Deactivate',
      actionActive: 'Activate',
      actionDeactivate: 'Deactivate',
      valdations: {
        firstName: 'First Name is required',
        lastName: 'Last Name is required',
        phone: 'Phone is required',
        email: {
          required: 'Email is required',
          email: 'Invalid email address',
        },
      },
    },
    createNew: 'New +',
    name: 'Name',
    email: 'Email',
    phone: 'Phone',
    status: 'Status',
    role: 'Role',
    created: 'Created',
  },
  fares: {
    blocks: {
      details: 'Details',
    },
    create: {
      code: 'Code',
      from: 'From',
      to: 'To',
      service: 'Service',
      validations: {
        code: 'Code is required',
      },
    },
    edit: {
      code: 'Code',
      from: 'From',
      to: 'To',
      service: 'Service',
      price: 'Price',
    },
    createNew: 'New +',
    code: 'Code',
    from: 'From',
    to: 'To',
    service: 'Service',
    price: 'Price',
  },
  trips: {
    tripInfo: {
      tripActions: {
        merge: 'Merge trip',
        send: 'Send trip',
        note: 'Add note',
        history: 'History',
        msg: 'Send driver a message',
        cancel: 'Cancel trip',
      },
      stopActions: {
        queue: 'Add to queue',
      },
      passengerActions: {
        queue: 'Add to queue',
      },
    },
    table: {
      headers: {
        id: 'ID',
        status: 'Status',
        date: 'Date',
        from: 'From',
        to: 'To',
        seats: 'Seats',
        distance: 'Distance',
        duration: 'Duration',
        service: 'Service',
        supplier: 'Supplier',
        driver: 'Driver',
        car: 'Vehicle',
        actions: 'Actions',
      },
    },
  },
  passengers: {
    blocks: {
      details: 'Personal Details',
      profile: 'Profile',
      addresses: 'Passenger Addresses',
      payments: 'Payment Status',
    },
    create: {
      firstName: 'First Name',
      lastName: 'Last Name',
      email: 'Email',
      phone: 'Phone',
      profile: 'Profile',
      homeAddress1: 'Home Address',
      homeAddress2: 'Home Address 2',
      officeAddress: 'Office Address',
      validations: {
        firstName: 'First Name is required',
        lastName: 'Last Name is required',
        email: {
          required: 'Email is required',
          email: 'Invalid email address',
        },
      },
    },
    edit: {
      firstName: 'First Name',
      lastName: 'Last Name',
      email: 'Email',
      phone: 'Phone',
      profile: 'Profile',
      homeAddress1: 'Home Address',
      homeAddress2: 'Home Address 2',
      officeAddress: 'Office Address',
      toastResetSuccess: 'Password reset sent to email.',
      toastError: 'Something was wrong!',
      informationTab: 'Information',
      notesTab: 'Notes',
      historyTab: 'History',
      popupTitleActive: 'Deactivate Reason',
      popupTitleDeactivation: 'Deactivate Passenger',
      popupSubTitleDeactivation: 'Select deactivation reason',
      popupactionActive: 'Activate',
      popupactionDeactivate: 'Deactivate',
      actionActive: 'Activate',
      actionDeactivate: 'Deactivate',
      validations: {
        firstName: 'First Name is required',
        lastName: 'Last Name is required',
        email: {
          required: 'Email is required',
          email: 'Invalid email address',
        },
      },
    },
    createNew: 'New +',
    name: 'Name',
    email: 'Email',
    phone: 'Phone',
    status: 'Status',
  },
  areas: {
    delete: 'Delete',
    deleteModal: {
      header: 'Delete Areas?',
      body: 'You are about to delete {{number}} areas',
    },
  },
  modalsReason: {
    actionCancel: 'Cancel',
    adminLocked: 'Admin Locked',
    constractTerminated: 'Constract Terminated',
    temporarySuspended: 'Temporary Suspended',
    textAreaPlaceholder: 'Enter reason',
  },
  routes: {
    suppliers: 'Suppliers',
    updateSupplier: 'Update Supplier',
    createSupplier: 'Create Supplier',
    shuttles: 'Shuttles',
    updateShuttle: 'Update Shuttle',
    createShuttle: 'Create Shuttle',
    fares: 'Fares',
    updateFare: 'Update Fare',
    createFare: 'Create Fare',
    services: 'Services',
    updateService: 'Update Service',
    createService: 'Create Service',
    users: 'Users',
    updateUser: 'Update User',
    createUser: 'Create User',
    vehicles: 'Vehicles',
    updateVehicle: 'Update Vehicle',
    createVehicle: 'Create Vehicle',
    areas: 'Areas',
    updateArea: 'Update Area',
    createArea: 'Create Area',
    drivers: 'Drivers',
    updateDriver: 'Update Driver',
    createDriver: 'Create Driver',
    playground: 'Playground',
    support: 'Support',
    parameters: 'Parameters',
    createParameter: 'Create Parameter',
    analytics: 'Analytics',
    settings: 'Settings',
    logout: 'Logout',
    liveMap: 'Live Map',
    driverShifts: 'Driver Shifts',
    passengers: 'Passengers',
    updatePassenger: 'Update Passenger',
    createPassenger: 'Create Passenger',
    activeDrivers: 'Active Drivers',
    trips: 'Trips',
    productionTrips: 'Production Trips',
    reservations: 'Reservations',
    editReservation: 'Edit Reservation',
    createReservation: 'Create Reservation',
    timeline: 'Timeline',
    home: 'Home',
    reports: 'Reports',
    locations: 'Locations',
    createLocation: 'Create Location',
    editLocation: 'Update Location',
    agentHome: 'Agent',
  },
  reports: {
    export: 'Export',
    filter: 'Filter',
    selectShuttle: 'Select shuttle',
    dateStart: 'Start date',
    dateEnd: 'End date',
    selectReport: 'Select report',
    reportType: 'Report type',
    reportTypeRequired: 'Report type is required',
    startDateRequired: 'Start date is required',
    endDateRequired: 'End date is required',
    shuttlePassangers: 'Shuttle Passangers',
    dailySummary: 'Daily Summary',
    delaysReport: 'Delays Report',
    shuttleReport: 'Shuttle Report',
    vehicleOccupancy: 'Vehicle Occupancy',
    commuterSatisfaction: 'Commuter Satisfaction',
    passengerCostPareto: 'Passenger Cost - PARETO',
    carbonEfficiency: 'Carbon Efficiency',
    totalTripsPassengers: ' Total Trips/Passengers',
    email: 'Email',
    trips: 'Поездки',
    fare: 'Fare',
    cost: 'Цена',
    costPercent: 'Cost Percent',
    performance: 'Performance',
    noData: 'No reports data to display',
  },
  locations: {
    name: 'Name',
    enterName: 'Enter Name',
    type: 'Type',
    selectType: 'Select Type',
    address: 'Address',
    typeAddress: 'Type Address',
    lat: 'Latitude',
    lon: 'Longitude',
    location: 'Location',
    special: 'Special',
    nameRequired: 'Name is required',
    addressRequired: 'Address is required',
    editLocation: 'Edit location',
    createLocation: 'Create location',
    minutes: 'Minutes',
    enterMinutes: 'Enter minutes',
    addTime: 'Add time',
    times: 'Times',
  },
  agent: {
    search: 'Search',
    newReservation: 'New Reservation',
    quickReservation: 'Quick Reservation',
    id: 'Id',
    date: 'Date',
    status: 'Status',
    passenger: 'Passenger',
    weather: 'Weather',
    noNewMessages: 'No New Messages',
    lastWeek: 'Wast Week',
    last24Hours: 'Last 24 Hours',
    myLastWeek: 'My Last Week',
    myLast24Hours: 'My Last 24 Hours',
    myLastBookings: 'My Last Bookings',
    myRecentViews: 'My Recent Views',
    loadingWeather: 'Loading weather...',
  },
};

export default ru;
